# Stores
type StoreOrders {
  pdpId: ID
  id: ID
  idStore: ID
  ppState: Int
  channel: Int
  change: Int
  pCodeRef: String
  pSState: ID
  payMethodPState: Int
  totalProductsPrice: Float
  unidProducts: Int
  createdAt: DateTime
  updatedAt: DateTime
  getUser: User
  shoppingCartRefCode: String
  locationUser: String
  # productFoodsOne: ProductFood
  # getStoreOrders: [StoreOrders]
  # getStatusOrderType: OrderStatusType
  # getAllShoppingCard: ShoppingCard
  # salesExtProductFoodOptional: [saleExtProductFoodOptional]
  getOneStore: Store
}
  type OrderPapu {
    id: String
    idStore: String
    pdpId: String
    totalProductsPrice: Int
    unidProducts: Int
  }

type ResponseSalesStore {
  success: Boolean
  message: String
  errors: [errors]
  data: StoreOrders
}

type Query {
  getOneSalesStore(pCodeRef: String): ResponseSalesStore
}

