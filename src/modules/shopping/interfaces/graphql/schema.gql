type ShoppingCart {
  shoppingCartId: ID
  # start
  id: ID
  pId: ID
  shoppingCartRefCode: String
  priceProduct: Float
  comments: String
  cantProducts: Int
  refCodePid: String
  # end
  idUser: ID
  idStore: ID
  sState: Int
  createdAt: DateTime
  updatedAt: DateTime
  getStore: Store
  # productFood: ProductFood
  # salesExtProductFoodOptional: [saleExtProductFoodOptional]
  # ExtProductFoodsAll: [ExtProductFood]
}


input IShoppingCart {
  shoppingCartId: ID
  id: ID
  pId: ID
  shoppingCartRefCode: String
  idUser: ID
  idStore: ID
  comments: String
  cantProducts: Int
  priceProduct: Float
  refCodePid: String
  sState: Int
  createdAt: DateTime
  updatedAt: DateTime
  # dataExtra: [ExtProductFoodInput]
  # dataOptional: [ExtProductFoodOptionalInput]
}

type ResponseShoppingCart {
  success: Boolean
  message: String
  errors: [errors]
  data: ShoppingCart
}


# ShoppingCart Input
input IID_SUB {
  _id: ID
}

input IID_SUB_ITEMS {
  setID: [IID_SUB]
}


# Query
type Query {
  getAllShoppingCart: [ShoppingCart]
}