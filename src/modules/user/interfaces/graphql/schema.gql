type User {
  id: ID!
  name: String!
  email: String!
  username: String
  lastName: String
  idRole: ID
  avatar: String
  uToken: String
  uPhoNum: String
  ULocation: String
  upLat: String
  uState: String
  upLon: String
  upIdeDoc: String
  siteWeb: String
  description: String
  password: String
  associateStore: JSON
  role: Roles
  createdAt: DateTime!
  updatedAt: DateTime!
}

input CreateUserInput {
  name: String!
  email: String!
}

type Query {
  getUserByEmail(email: String!): User
  getUser(id: ID, userName: String, email: String): User
}

type Mutation {
  createUser(input: CreateUserInput!): User
}

type Subscription {
  messageCreated(chatId: ID!): User
}
